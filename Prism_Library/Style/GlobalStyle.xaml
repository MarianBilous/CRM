<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    
                    xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
                    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=WpfToolkit"
                    xmlns:controlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                                  >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        
        
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    

    <Style x:Key="DragablzItemStyle" TargetType="{x:Type dragablz:DragablzItem}" BasedOn="{StaticResource MaterialDesignDragableTabItemStyle}"/>

    <Style x:Key="MenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel Background="Transparent">
                                <materialDesign:PackIcon Kind="MenuDown" DockPanel.Dock="Right" VerticalAlignment="Center" 
                                                             Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                                <ContentPresenter Content="{Binding}" Margin="5,0" />
                            </DockPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="0" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">

                <Setter Property="CommandParameter" Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Resources>
            <Style TargetType="materialDesign:SmartHint" BasedOn="{StaticResource {x:Type materialDesign:SmartHint}}">
                <Style.Resources>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="BlueViolet"/>
                </Style.Resources>

                <Setter Property="Foreground" Value="#FFEEEEEE"/>
            </Style>
        </Style.Resources>

    </Style>


    <Style x:Key="CustomHeaderStyle" TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
        <!-- This is currently broken is v2.5.1; and does not work -->
        <Setter Property="Background" Value="Transparent" />
        
        <!-- Header text color -->
        <!--<Setter Property="Foreground" Value="#F44336" />-->

        <Style.Resources>
            <!-- Mouse over color -->
            <SolidColorBrush x:Key="MaterialDesignBody" Color="#F44336" />
        </Style.Resources>
    </Style>


    
    <Style x:Key="ItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
        <Style.Resources>
            <!-- Item Selection color -->
            <SolidColorBrush x:Key="MaterialDesignSelection" Color="#EF5350" />
            <!-- Mouse over color and separator color -->
            <SolidColorBrush x:Key="MaterialDesignDivider" Color="#CFCFCF" />
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />       

        <Style.Triggers>
            <!-- Overriding colors by duplicating triggers from the base style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#888888" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#EF5350" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <!--<Style x:Key="CustomAutoCompleteBox" TargetType="{x:Type controls:AutoCompleteBox}" BasedOn="{StaticResource {x:Type controls:AutoCompleteBox}}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AutoCompleteBox}">
                    <Grid Opacity="{TemplateBinding Opacity}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="PopupStates">
                                <vsm:VisualStateGroup.Transitions>
                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened" />
                                    <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="PopupClosed" />
                                </vsm:VisualStateGroup.Transitions>
                                <vsm:VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity"
                                                                 To="1.0" Duration="0:0:0.1"  />
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity"
                                                                 To="0" Duration="0:0:0.1"  />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="ValidationStates">
                                <vsm:VisualState x:Name="Valid" />
                                <vsm:VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen" >
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <ObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </ObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>

                        <TextBox x:Name="Text"
                                 Padding="{TemplateBinding Padding}"
                                 Background="{TemplateBinding Background}"
                                 IsTabStop="True"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Foreground="{TemplateBinding Foreground}"
                                 Margin="0"
                                 Style="{StaticResource MaterialDesignTextBox}"/>
                        <Border
                                x:Name="ValidationErrorElement"
                                Visibility="Collapsed"
                                BorderBrush="#FFDB000C"
                                BorderThickness="1"
                                CornerRadius="1">
                            <ToolTipService.ToolTip>
                                <ToolTip
                                            x:Name="validationTooltip"
                                            Placement="Right"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <FrameworkElement.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames
                                                                    Storyboard.TargetName="validationTooltip"
                                                                    Storyboard.TargetProperty="IsHitTestVisible" >
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <ObjectKeyFrame.Value>
                                                                <system:Boolean>true</system:Boolean>
                                                            </ObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </FrameworkElement.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid
                                Height="12"
                                HorizontalAlignment="Right"
                                Margin="1,-4,-4,0"
                                VerticalAlignment="Top"
                                Width="12"
                                Background="#00FFFFFF">
                                <Path
                                    Fill="#FFDC000C"
                                    Margin="1,3,0,0"
                                    Data="M1,0 L6,0 A2,2 0 0 1 8,2L8,7" />
                                <Path Fill="#ffffff" Margin="1,3,0,0" Data="M0,0 L2,0 L8,6 L8,8" />
                            </Grid>
                        </Border>
                        <controlzEx:PopupEx x:Name="Popup">
                            <Grid Opacity="{TemplateBinding Opacity}" Background="{TemplateBinding Background}">
                                <Border x:Name="PopupBorder" HorizontalAlignment="Stretch"
                                        BorderThickness="0"
                                        Background="{DynamicResource MaterialDesignPaper}">
                                    <UIElement.RenderTransform>
                                        <TranslateTransform X="1" Y="1" />
                                    </UIElement.RenderTransform>
                                    <Border
                                         HorizontalAlignment="Stretch"
                                         Opacity="1"
                                         Padding="0"
                                         BorderThickness="1 0 1 1"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{DynamicResource MaterialDesignPaper}"
                                         CornerRadius="0">
                                        <UIElement.RenderTransform>
                                            <TransformGroup >
                                                <TranslateTransform X="-1" Y="-1" />
                                            </TransformGroup>
                                        </UIElement.RenderTransform>
                                        <ListBox
                                            x:Name="Selector"
                                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                            ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                            Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}"
                                            BorderThickness="0"
                                            ItemTemplate="{TemplateBinding ItemTemplate}" />
                                    </Border>
                                </Border>
                            </Grid>
                        </controlzEx:PopupEx>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


</ResourceDictionary>